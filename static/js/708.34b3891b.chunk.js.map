{"version":3,"file":"static/js/708.34b3891b.chunk.js","mappings":"wLACA,EAA0B,8BAA1B,EAAuE,mCAAvE,EAAqH,+BAArH,EAA2J,2BAA3J,EAAkM,gCAAlM,EAA6O,+BAA7O,EAAsR,8BAAtR,EAA2T,2B,6FCOrTA,EAAW,SAAC,GAA0D,EAAxDC,MAAyD,IAAlDC,EAAiD,EAAjDA,IAAKC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,MAIzC,GAJwE,EAAxBC,SAAwB,aAIhDC,EAAAA,EAAAA,WAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAAgCF,EAAAA,EAAAA,UAASF,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAIMC,EAAOF,EAAQ,UAAMG,EAAN,YAAoBA,GAApB,UAAkCA,GAEjDC,GAASC,EAAAA,EAAAA,QAAO,MAWtB,OACI,iCACI,iBACIC,UAAWJ,EACXN,QApBK,WACLK,GAARN,IAoBQY,UAdZ,SAAuBC,GAGf,WADAA,EAAMC,OAAOC,uBAAuBC,WAAWC,IAAIC,aAGnDd,GAAQ,IAUJe,IAAKV,EAJT,WAMI,gBAAKE,UAAWH,EAAaY,IAAKtB,EAAKmB,IAAKlB,KAC5C,gBAAKY,UAAWH,EAAYY,IAAKC,EAASJ,IAAI,YAEjDd,IACG,gBAAKQ,UAAWH,EAAhB,UACI,SAACc,EAAA,EAAD,CACIC,SApCE,UAqCFC,cApCO,UAkCX,UAII,cACIb,UAAWH,EACXiB,KAAK,sCAFT,8BAwExB,EA3DqB,WACjB,IAuCIC,EAvCU,CACV,CACI7B,MAAO,EACPC,IAAK6B,EACL5B,YAAa,QACbC,OAAO,GAEX,CACIH,MAAO,EACPC,IAAK6B,EACL5B,YAAa,QACbC,OAAO,GAEX,CACIH,MAAO,EACPC,IAAK6B,EACL5B,YAAa,QACbC,OAAO,GAEX,CACIH,MAAO,EACPC,IAAK6B,EACL5B,YAAa,QACbC,OAAO,GAEX,CACIH,MAAO,EACPC,IAAK6B,EACL5B,YAAa,QACbC,OAAO,GAEX,CACIH,MAAO,EACPC,IAAK8B,EACL7B,YAAa,SACbC,OAAO,IAIa6B,KAAI,SAACC,EAAIC,GACjC,OACI,SAACnC,EAAD,CAEIC,MAAOiC,EAAGjC,MACVC,IAAKgC,EAAGhC,IACRC,YAAa+B,EAAG/B,YAChBC,MAAO8B,EAAG9B,OAJL+B,MASjB,OACI,gBAAKpB,UAAWH,EAAhB,UACI,gBAAKG,UAAWH,EAAhB,SAAiCkB,Q","sources":["webpack://my-project/./src/components/FindCardGame/FindCardGame.module.css?4116","components/FindCardGame/FindCardGame.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"FindCardGame_wrapper__jkVrx\",\"findCardGame\":\"FindCardGame_findCardGame__7vMN5\",\"findCard\":\"FindCardGame_findCard__siEU7\",\"flip\":\"FindCardGame_flip__NNdct\",\"frontFace\":\"FindCardGame_frontFace__R8fBf\",\"backFace\":\"FindCardGame_backFace__EMwoD\",\"wrapBtn\":\"FindCardGame_wrapBtn__DN+ej\",\"link\":\"FindCardGame_link__cVfrl\"};","import { useState, useRef } from \"react\";\r\nimport s from \"./FindCardGame.module.css\";\r\nimport imgRabbit from \"../../assets/images/rabbit.jpg\";\r\nimport imgEmpty from \"../../assets/images/wall5.jpg\";\r\nimport imgBack from \"../../assets/images/wall6.jpg\";\r\n\r\nimport MyBtn from \"../common/MyBtn/MyBtn\";\r\n\r\nconst FindCard = ({ value, img, description, click, onClick, ...props }) => {\r\n    const btnColorGreen = \"#00ff00\";\r\n    const txtHoverColorGreen = \"#168A00\";\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [thisCard, setThisCard] = useState(click);\r\n    const flipCard = () => {\r\n        click ? setThisCard(false) : setThisCard(true);\r\n    };\r\n    const flip = thisCard ? `${s.findCard} ${s.flip}` : `${s.findCard}`;\r\n\r\n    const rootEl = useRef(null);\r\n\r\n    function handleMouseUp(event) {\r\n        if (\r\n            event.target.previousElementSibling.attributes.alt.textContent ===\r\n            \"rabbit\"\r\n        ) {\r\n            setShow(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={flip}\r\n                onClick={flipCard}\r\n                onMouseUp={handleMouseUp}\r\n                ref={rootEl}\r\n            >\r\n                <img className={s.frontFace} src={img} alt={description}></img>\r\n                <img className={s.backFace} src={imgBack} alt=\"back\"></img>\r\n            </div>\r\n            {show && (\r\n                <div className={s.wrapBtn}>\r\n                    <MyBtn\r\n                        btnColor={btnColorGreen}\r\n                        txtHoverColor={txtHoverColorGreen}\r\n                    >\r\n                        <a\r\n                            className={s.link}\r\n                            href=\"https://github.com/Slv97/My-project\"\r\n                        >\r\n                            ..exit..\r\n                        </a>\r\n                    </MyBtn>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst FindCardGame = () => {\r\n    const cards = [\r\n        {\r\n            value: 0,\r\n            img: imgEmpty,\r\n            description: \"empty\",\r\n            click: false,\r\n        },\r\n        {\r\n            value: 1,\r\n            img: imgEmpty,\r\n            description: \"empty\",\r\n            click: false,\r\n        },\r\n        {\r\n            value: 2,\r\n            img: imgEmpty,\r\n            description: \"empty\",\r\n            click: false,\r\n        },\r\n        {\r\n            value: 3,\r\n            img: imgEmpty,\r\n            description: \"empty\",\r\n            click: false,\r\n        },\r\n        {\r\n            value: 4,\r\n            img: imgEmpty,\r\n            description: \"empty\",\r\n            click: false,\r\n        },\r\n        {\r\n            value: 5,\r\n            img: imgRabbit,\r\n            description: \"rabbit\",\r\n            click: false,\r\n        },\r\n    ];\r\n\r\n    let findCardElement = cards.map((el, i) => {\r\n        return (\r\n            <FindCard\r\n                key={i}\r\n                value={el.value}\r\n                img={el.img}\r\n                description={el.description}\r\n                click={el.click}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.findCardGame}>{findCardElement}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FindCardGame;\r\n"],"names":["FindCard","value","img","description","click","onClick","useState","show","setShow","thisCard","setThisCard","flip","s","rootEl","useRef","className","onMouseUp","event","target","previousElementSibling","attributes","alt","textContent","ref","src","imgBack","MyBtn","btnColor","txtHoverColor","href","findCardElement","imgEmpty","imgRabbit","map","el","i"],"sourceRoot":""}